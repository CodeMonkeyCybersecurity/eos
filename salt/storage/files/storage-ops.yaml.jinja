# Storage Operations Configuration
# Generated for {{ role }} role in {{ scale }} scale deployment

storage:
  monitor:
    interval: {% if scale == 'distributed' %}1m{% elif scale == 'medium' %}3m{% else %}5m{% endif %}
    history_retention: 7d
    metrics_enabled: true
    
  # Role-specific configuration
  role: {{ role }}
  scale: {{ scale }}
    
  # Data classification rules
  classification:
    critical:
      - /etc
      - /var/lib/mysql
      - /var/lib/postgresql
      - /var/lib/vault
      - /home
      {% if role in ['data', 'monolith'] %}
      - /mnt/backups
      - /var/lib/postgresql
      {% endif %}
      - "*.key"
      - "*.crt"
      - "*.pem"
    important:
      - /var/log
      - /var/backups
      - /opt
      - /usr/local
      {% if role in ['core', 'monolith'] %}
      - /opt/apps
      - /var/lib/docker
      {% endif %}
      - "*.conf"
      - "*.config"
    standard:
      - /var/cache
      - /var/spool
      - /usr/share
    expendable:
      - /tmp
      - /var/tmp
      - "*.tmp"
      - "*.cache"
      - "*.swp"
      - "*~"
      
  cleanup:
    # Docker cleanup settings
    docker:
      log_max_size: {% if scale == 'single' %}50m{% else %}100m{% endif %}
      log_max_files: {% if scale == 'single' %}2{% else %}3{% endif %}
      prune_until: {% if scale == 'single' %}24h{% else %}72h{% endif %}
      prune_volumes: true
    # Log rotation settings
    logs:
      compress_after: {% if scale == 'single' %}3d{% else %}7d{% endif %}
      delete_after: {% if scale == 'single' %}14d{% else %}30d{% endif %}
      max_size: {% if scale == 'single' %}50m{% else %}100m{% endif %}
      
  emergency:
    # Services to stop in emergency (role-specific)
    stop_services:
      {% if role == 'edge' %}
      - varnish
      - haproxy
      {% elif role == 'core' %}
      - jenkins
      - gitlab-runner
      {% elif role == 'data' %}
      - minio
      - redis
      {% else %}
      - jenkins
      - gitlab-runner
      - elasticsearch
      - grafana
      {% endif %}
    # Paths to preserve at all costs
    preserve_paths:
      - /etc
      - /home/*/Documents
      {% if role in ['data', 'monolith'] %}
      - /var/lib/postgresql
      - /var/lib/mysql
      - /mnt/backups
      {% endif %}
      {% if role == 'core' %}
      - /opt/apps/data
      {% endif %}
      
  # Thresholds from grains or defaults
  thresholds:
    {% if thresholds %}
    {% for key, value in thresholds.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
    {% else %}
    # Default thresholds for {{ scale }} scale
    {% if scale == 'single' %}
    warning: 60
    compress: 70
    cleanup: 75
    degraded: 80
    emergency: 85
    critical: 90
    {% elif scale == 'small' %}
    warning: 65
    compress: 75
    cleanup: 80
    degraded: 85
    emergency: 90
    critical: 95
    {% else %}
    warning: 70
    compress: 80
    cleanup: 85
    degraded: 90
    emergency: 93
    critical: 95
    {% endif %}
    {% endif %}
    
  # Role-specific settings
  {% if role == 'edge' %}
  edge:
    cache_size: 20G
    cdn_cleanup: true
  {% elif role == 'core' %}
  core:
    container_limit: 50
    image_cleanup_days: 7
  {% elif role == 'data' %}
  data:
    backup_before_cleanup: true
    transaction_log_retention: 7d
  {% endif %}