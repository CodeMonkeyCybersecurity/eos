# Generated by SaltStack - MinIO Terraform variables

variable "nomad_addr" {
  description = "Nomad server address"
  type        = string
  default     = "{{ salt['pillar.get']('nomad:api_addr', 'http://localhost:4646') }}"
}

variable "consul_addr" {
  description = "Consul server address"  
  type        = string
  default     = "{{ salt['pillar.get']('consul:api_addr', 'http://localhost:8161') }}"
}

variable "vault_addr" {
  description = "Vault server address"
  type        = string
  default     = "{{ salt['pillar.get']('vault:api_addr', 'http://localhost:8200') }}"
}

variable "datacenter" {
  description = "Nomad datacenter"
  type        = string
  default     = "{{ minio.get('datacenter', 'dc1') }}"
}

variable "storage_path" {
  description = "MinIO storage path on host"
  type        = string
  default     = "{{ minio.get('storage_path', '/mnt/minio-data') }}"
}

variable "api_port" {
  description = "MinIO API port"
  type        = number
  default     = {{ minio.get('api_port', 9123) }}
}

variable "console_port" {
  description = "MinIO console port"
  type        = number
  default     = {{ minio.get('console_port', 8123) }}
}

variable "memory_limit" {
  description = "Memory limit in MB for MinIO container"
  type        = number
  default     = {{ minio.get('memory_limit', 1024) }}
}

variable "cpu_limit" {
  description = "CPU limit in MHz for MinIO container"
  type        = number
  default     = {{ minio.get('cpu_limit', 500) }}
}

variable "minio_root_user" {
  description = "MinIO root username"
  type        = string
  default     = "{{ minio.get('root_user', 'minioadmin') }}"
}

variable "node_name" {
  description = "Consul node name for service registration"
  type        = string
  default     = "{{ grains.get('id', 'nomad-client-1') }}"
}

variable "node_address" {
  description = "Node IP address for health checks"
  type        = string
  default     = "{{ grains.get('ip4_interfaces:eth0:0', '127.0.0.1') }}"
}

variable "volume_source" {
  description = "Volume source name (host volume or CSI volume)"
  type        = string
  {% if minio.get('use_cephfs', false) %}
  default     = "{{ minio.get('cephfs_volume', 'minio-cephfs') }}"
  {% else %}
  default     = "minio-data-{{ app_name }}"
  {% endif %}
}

variable "skip_vault" {
  description = "Skip Vault integration (use Consul for credentials)"
  type        = bool
  default     = false
}

# Optional variables for advanced configuration
variable "enable_prometheus" {
  description = "Enable Prometheus metrics collection"
  type        = bool
  default     = {{ minio.get('enable_prometheus', true) | lower }}
}

variable "backup_retention_days" {
  description = "Number of days to retain backups"
  type        = number
  default     = {{ minio.get('backup_retention_days', 30) }}
}

variable "tls_enabled" {
  description = "Enable TLS for MinIO"
  type        = bool
  default     = {{ minio.get('tls_enabled', false) | lower }}
}