services:
  generate-certs:
    image: alpine:latest
    command: >
      sh -c 'apk add --no-cache openssl &&
            mkdir -p /certs &&
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/tls.key -out /certs/tls.crt -subj "/CN=localhost" &&
            chmod 644 /certs/tls.crt /certs/tls.key &&
            sleep infinity'
    volumes:
      - keycloak-certs:/certs

  postgres:
    image: postgres
    container_name: hera-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: changeme
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - eos-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    # Use HTTPS and point to our mounted certificate files:
    command: [
      "start",
      "--https-port=8443",
      "--https-certificate-file=/etc/x509/https/tls.crt",
      "--https-certificate-key-file=/etc/x509/https/tls.key"
    ]
    container_name: hera-keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: changeme
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://hera-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: changeme
      KC_HOSTNAME: hera.domain.com
      # Optionally, if needed by your setup:
      KC_EXTERNAL_URL: "https://hera.domain.com"
    ports:
      - "8111:8443"
    depends_on:
      - postgres
      - generate-certs
    networks:
      - eos-network
     
volumes:
  pgdata:
  keycloak-certs:

networks:
  eos-network:
