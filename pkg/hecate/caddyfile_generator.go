// pkg/hecate/caddyfile_generator.go
// Caddyfile generation for Hecate

package hecate

import (
	"fmt"
	"path/filepath"

	"github.com/CodeMonkeyCybersecurity/eos/pkg/eos_io"
	"github.com/CodeMonkeyCybersecurity/eos/pkg/eos_unix"
	"github.com/uptrace/opentelemetry-go-extra/otelzap"
	"go.uber.org/zap"
)

// GenerateMinimalCaddyfile generates a basic Caddyfile with Authentik exposed at hera subdomain
func GenerateMinimalCaddyfile(rc *eos_io.RuntimeContext, domain string) error {
	logger := otelzap.Ctx(rc.Ctx)
	logger.Info("Generating minimal Caddyfile", zap.String("domain", domain))

	caddyContent := fmt.Sprintf(`# Caddyfile - Hecate Minimal Configuration
# Generated by Eos

# Global logging configuration
{
    log {
        output file /var/log/caddy/access.log
        format json
        level INFO
    }
}

# Security snippet - blocks common attack patterns
(security) {
    @blocked {
        header Cf-Worker *
        header Cf-Connecting-Ip *
        header Cf-Ray *
    }
    respond @blocked 404

    @scanners {
        path /wp-admin/* /wp-login.php /wordpress/* /.git/* /.env /phpmyadmin/*
        path /config.json /.DS_Store /info.php /phpinfo.php /test.php
        path /telescope/* /horizon/* /pulse/* # Laravel stuff
        path /.well-known/security.txt /.svn/* /.hg/*
        path /backup/* /old/* /temp/* /tmp/* /sql/*
        path /admin/* /manager/* /shell.php
        path_regexp (/(vendor|node_modules|bower_components)/|\.(sql|bak|backup|log|old|orig|original|save|swp|tmp)$|\?rest_route=)
    }
    respond @scanners 404

    @suspicious_agents {
        header_regexp User-Agent (?i)(bot|crawler|spider|scraper|scan|exploit|nikto|sqlmap|havij|acunetix)
        header User-Agent "Go-http-client/1.1"  # Generic Go client often used by scanners
    }
    respond @suspicious_agents 444  # Close connection without response
}

# Common configuration for all sites
(common) {
    import security
    encode gzip
    log {
        format json
        level INFO
    }

    header {
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), payment=(), usb=(), bluetooth=(), magnetometer=(), gyroscope=()"
        X-XSS-Protection "1; mode=block"
        -Server
    }
}

# Authentik SSO - exposed at hera subdomain
hera.%s {
    import common

    # Additional logging for authentication events
    log {
        output file /var/log/caddy/hera.log
        format json
        level DEBUG
    }

    # Reverse proxy to Authentik server container
    reverse_proxy http://server:9000
}
`, domain)

	caddyfilePath := filepath.Join(BaseDir, "Caddyfile")
	if err := eos_unix.WriteFile(rc.Ctx, caddyfilePath, []byte(caddyContent), 0644, ""); err != nil {
		return fmt.Errorf("failed to write Caddyfile: %w", err)
	}

	logger.Info("Generated Caddyfile", zap.String("path", caddyfilePath))
	return nil
}
